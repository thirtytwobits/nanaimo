#
# We test nanaimo using python 3.7 - 3.8.
#
# The standard version to develop against is 3.7.
#
[tox]
envlist = lint,mypy,{py35,py36,py37,py38}-{test,nait},report,docs,package

[pytest]
log_cli = true
log_cli_level = DEBUG
log_format = %(asctime)s %(levelname)s %(name)s: %(message)s
log_date_format = %Y-%m-%d %H:%M:%S

[testenv]
setenv =
    PYTHONDONTWRITEBYTECODE=1
    PYTHONPATH={toxinidir}/test

passenv =
    BUILDKITE
    BUILDKITE_*
    PYPI_PASSWORD
    SONARQUBE_TOKEN
    NANAIMO_MAJOR_MINOR_VERSION
    NANAIMO_FULL_VERSION

deps =
    test: pyserial
    test: pytest_asyncio
    test: pytest-timeout
    test: Sybil
    test,nait: pytest
    test,nait: coverage
    test,nait: pyyaml
    test,nait: argcomplete

commands =
    test: coverage run --rcfile={toxinidir}/setup.cfg -m pytest {posargs} -s --basetemp={envtmpdir} -p "no:cacheprovider" --junitxml={envtmpdir}/xunit-result.xml --rootdir={toxinidir}
    nait: coverage run --rcfile={toxinidir}/setup.cfg -m nanaimo --version
    nait: coverage run --rcfile={toxinidir}/setup.cfg -m nanaimo --help


[testenv:docs]
basepython = python3.7
deps = 
    pyserial
    pytest
    argcomplete
    sphinx >= 1.8.5
    sphinx-argparse
    sphinx_rtd_theme

commands =
    sphinx-build -b html . {envtmpdir}


[testenv:report]
deps = coverage
skip_install = true
commands =
    coverage combine --append --rcfile={toxinidir}/setup.cfg
    coverage html -i --rcfile={toxinidir}/setup.cfg -d {envtmpdir}
    coverage xml -i --rcfile={toxinidir}/setup.cfg -o {envtmpdir}/coverage.xml

[testenv:mypy]
basepython = python3.7
deps = 
    mypy
    lxml

changedir = src
skip_install = true
commands =
    mypy -m nanaimo \
        --cache-dir {envtmpdir} \
        --txt-report {envtmpdir}/mypy-report-lib \
        --config-file {toxinidir}/setup.cfg

[testenv:lint]
basepython = python3.7
skip_install = true
deps =
    flake8
changedir = src
commands =
    flake8 --benchmark --tee --output-file={envtmpdir}/flake8.txt --filename=*.py


[testenv:package]
basepython = python3.7
deps = 
    wheel
    twine

commands = 
    python setup.py \
        sdist -d {toxworkdir}/package/dist \
        bdist_wheel -d {toxworkdir}/package/dist \
                                      -b {envtmpdir}/tmp \
                                      -k \
                                      --build-number {env:BUILDKITE_BUILD_NUMBER:0}
    twine check {toxworkdir}/package/dist/*


[testenv:sonar]
basepython = python3.7
whitelist_externals = sonar-scanner

commands=
    sonar-scanner \
        -Dsonar.login={env:SONARQUBE_TOKEN:} \
        -Dsonar.buildString={env:BUILDKITE_BUILD_NUMBER:0} \
        -Dsonar.projectVersion={env:NANAIMO_MAJOR_MINOR_VERSION:0}

[testenv:upload]
basepython = python3.7
skip_install = true
deps = 
    twine

commands = 
    twine upload -u __token__ -p {env:PYPI_PASSWORD:} {toxworkdir}/package/dist/*
